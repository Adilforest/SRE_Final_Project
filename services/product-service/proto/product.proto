syntax = "proto3";

package product.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "BikeStoreGolang/api-gateway/proto/product;productpb";

service ProductService {
  rpc CreateProduct (CreateProductRequest) returns (ProductResponse);
  rpc UpdateProduct (UpdateProductRequest) returns (ProductResponse);
  rpc DeleteProduct (DeleteProductRequest) returns (google.protobuf.Empty);
  rpc ChangeProductStock (ChangeStockRequest) returns (ProductResponse);

  rpc GetProduct (GetProductRequest) returns (ProductResponse);
  rpc ListProducts (ProductFilter) returns (stream ProductResponse);
  rpc SearchProducts (SearchRequest) returns (stream ProductResponse);
}

enum BikeType {
  BIKE_TYPE_UNSPECIFIED = 0;
  ROAD = 1;
  MOUNTAIN = 2;
  HYBRID = 3;
  ELECTRIC = 4;
}

message Feature {
  string name = 1;
  string value = 2;
}

message ProductResponse {
  string id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  int32 quantity = 5;
  BikeType type = 6;
  string brand = 7;
  string size = 8;
  string color = 9;
  double weight = 10;
  double rating = 11;
  bool is_active = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
  repeated Feature features = 15;
}

message CreateProductRequest {
  string name = 1;
  string description = 2;
  double price = 3;
  int32 quantity = 4;
  BikeType type = 5;
  string brand = 6;
  string size = 7;
  string color = 8;
  double weight = 9;
  repeated Feature features = 10;
}

message UpdateProductRequest {
  string id = 1;
  optional string name = 2;
  optional string description = 3;
  optional double price = 4;
  optional int32 quantity = 5;
  optional BikeType type = 6;
  optional string brand = 7;
  optional string size = 8;
  optional string color = 9;
  optional double weight = 10;
  repeated Feature features = 11;
}

message DeleteProductRequest {
  string id = 1;
}

message GetProductRequest {
  string id = 1;
}

message ProductFilter {
  repeated BikeType types = 1;
  double min_price = 2;
  double max_price = 3;
  repeated string brands = 4;
  repeated string sizes = 5;
  string sort_by = 6;
  int32 sort_order = 7;
  bool only_active = 8;
}

message SearchRequest {
  string query = 1;
  ProductFilter filter = 2;
}

message ChangeStockRequest {
  string product_id = 1;
  int32 quantity_change = 2;
  string order_id = 3;
}